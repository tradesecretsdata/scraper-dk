AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Serverless scraping pipeline

Parameters:
  Env: # stage | prod
    Type: String
    AllowedValues: [stage, prod]
  BucketName:
    Type: String
  S3Prefix:
    Type: String
  RoleArn:
    Type: String
  ApiUrl:
    Type: String
    Default: ""

Mappings:
  SecretNames:
    stage:
      Oxylabs: /scraper-dk/stage/oxylabs
    prod:
      Oxylabs: /scraper-dk/prod/oxylabs

Globals:
  Function:
    Runtime: python3.12
    MemorySize: 128
    Timeout: 300
    Architectures: [x86_64]
    Handler: handler.lambda_handler
    Environment:
      Variables:
        ENV: !Ref Env
        RAW_PREFIX: !Sub "${S3Prefix}/${Env}/raw"
        PROC_PREFIX: !Sub "${S3Prefix}/${Env}/processed"
        DB_URI: !Sub "s3://${BucketName}/${S3Prefix}/${Env}/db/scraper-dk.duckdb"
        API_URL: !Ref ApiUrl
        BUCKET_NAME: !Ref BucketName
        OXYLABS_HOST: !Sub
          - "{{resolve:secretsmanager:${SecretName}:SecretString:host}}"
          - { SecretName: !FindInMap [SecretNames, !Ref Env, Oxylabs] }

        OXYLABS_PORT: !Sub
          - "{{resolve:secretsmanager:${SecretName}:SecretString:port}}"
          - { SecretName: !FindInMap [SecretNames, !Ref Env, Oxylabs] }

        OXYLABS_USER: !Sub
          - "{{resolve:secretsmanager:${SecretName}:SecretString:user}}"
          - { SecretName: !FindInMap [SecretNames, !Ref Env, Oxylabs] }

        OXYLABS_PASSWORD: !Sub
          - "{{resolve:secretsmanager:${SecretName}:SecretString:password}}"
          - { SecretName: !FindInMap [SecretNames, !Ref Env, Oxylabs] }

        OXYLABS_COUNTRY: !Sub
          - "{{resolve:secretsmanager:${SecretName}:SecretString:country}}"
          - { SecretName: !FindInMap [SecretNames, !Ref Env, Oxylabs] }

Resources:
  ScraperFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Policies:
        # 1. Read *only* the Oxylabs secret for the chosen environment
        - SecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub
              - arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${SecretName}*
              - { SecretName: !FindInMap [SecretNames, !Ref Env, Oxylabs] }
        # 2. Write DraftKings JSON to the specified S3 bucket/prefix
        - S3WritePolicy:
            BucketName: !Ref BucketName
      Role: !Ref RoleArn
      Events:
        HourlySchedule:
          Type: Schedule
          Properties:
            Schedule: !If
              - IsProd
              - "rate(60 minutes)"
              - "rate(120 minutes)"
      Layers: [] # add libs layer if size > 250Â MB

  # OPTIONAL: CloudWatch metric + alarm straight in CFN
  ErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${Env}-scraper-errors"
      MetricName: Errors
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref ScraperFunction
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - arn:aws:sns:us-east-2:688035104276:lambda-alerts

Conditions:
  IsProd: !Equals [!Ref Env, "prod"]

Outputs:
  FunctionArn: { Value: !GetAtt ScraperFunction.Arn }
  BucketName: { Value: !Ref BucketName }
  OxySecretName:
    Value: !FindInMap [SecretNames, !Ref Env, Oxylabs]
